# Generated by Django 4.2.21 on 2025-10-05 04:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('widget_type', models.CharField(choices=[('chart', 'Chart'), ('table', 'Table'), ('metric', 'Metric'), ('text', 'Text'), ('image', 'Image')], max_length=20)),
                ('chart_type', models.CharField(blank=True, choices=[('line', 'Line Chart'), ('bar', 'Bar Chart'), ('pie', 'Pie Chart'), ('area', 'Area Chart'), ('scatter', 'Scatter Plot')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('configuration', models.JSONField(default=dict, help_text='Widget-specific configuration')),
                ('data_source', models.CharField(help_text='Data source identifier', max_length=100)),
                ('query_filters', models.JSONField(default=dict, help_text='Filters for data query')),
                ('width', models.IntegerField(default=6, help_text='Width in grid columns (1-12)')),
                ('height', models.IntegerField(default=4, help_text='Height in grid rows')),
                ('refresh_interval', models.IntegerField(default=300, help_text='Refresh interval in seconds')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('daily', 'Daily Report'), ('weekly', 'Weekly Report'), ('monthly', 'Monthly Report'), ('custom', 'Custom Report')], max_length=20)),
                ('format', models.CharField(choices=[('email', 'Email'), ('pdf', 'PDF'), ('csv', 'CSV'), ('dashboard', 'Dashboard')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('schedule_time', models.TimeField(help_text='Time to send report (for daily/weekly)')),
                ('schedule_day', models.IntegerField(blank=True, choices=[(1, 'Day 1'), (2, 'Day 2'), (3, 'Day 3'), (4, 'Day 4'), (5, 'Day 5'), (6, 'Day 6'), (7, 'Day 7'), (8, 'Day 8'), (9, 'Day 9'), (10, 'Day 10'), (11, 'Day 11'), (12, 'Day 12'), (13, 'Day 13'), (14, 'Day 14'), (15, 'Day 15'), (16, 'Day 16'), (17, 'Day 17'), (18, 'Day 18'), (19, 'Day 19'), (20, 'Day 20'), (21, 'Day 21'), (22, 'Day 22'), (23, 'Day 23'), (24, 'Day 24'), (25, 'Day 25'), (26, 'Day 26'), (27, 'Day 27'), (28, 'Day 28'), (29, 'Day 29'), (30, 'Day 30'), (31, 'Day 31')], help_text='Day of month for monthly reports', null=True)),
                ('recipients', models.JSONField(default=list, help_text='List of email addresses')),
                ('include_charts', models.BooleanField(default=True)),
                ('include_tables', models.BooleanField(default=True)),
                ('include_summary', models.BooleanField(default=True)),
                ('date_range_days', models.IntegerField(default=30)),
                ('platforms', models.JSONField(default=list, help_text='Platforms to include')),
                ('event_types', models.JSONField(default=list, help_text='Event types to include')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_sent', models.DateTimeField(blank=True, null=True)),
                ('next_send', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsExport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('export_type', models.CharField(choices=[('events', 'Events Data'), ('reports', 'Reports Data'), ('dashboard', 'Dashboard Data'), ('custom', 'Custom Export')], max_length=20)),
                ('format', models.CharField(choices=[('csv', 'CSV'), ('json', 'JSON'), ('xlsx', 'Excel'), ('pdf', 'PDF')], max_length=10)),
                ('filters', models.JSONField(default=dict, help_text='Export filters')),
                ('columns', models.JSONField(default=list, help_text='Columns to include')),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('download_count', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('layout', models.JSONField(default=dict, help_text='Dashboard layout configuration')),
                ('widgets', models.JSONField(default=list, help_text='List of widget configurations')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ManyToManyField(blank=True, related_name='shared_dashboards', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('alert_type', models.CharField(choices=[('threshold', 'Threshold Alert'), ('anomaly', 'Anomaly Detection'), ('trend', 'Trend Alert'), ('custom', 'Custom Alert')], max_length=20)),
                ('metric', models.CharField(help_text='Metric to monitor', max_length=100)),
                ('condition', models.CharField(help_text='Alert condition', max_length=50)),
                ('threshold_value', models.FloatField(help_text='Threshold value for alert')),
                ('is_active', models.BooleanField(default=True)),
                ('recipients', models.JSONField(default=list, help_text='Email recipients')),
                ('cooldown_hours', models.IntegerField(default=24, help_text='Hours between alerts')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('page_view', 'Page View'), ('product_view', 'Product View'), ('add_to_cart', 'Add to Cart'), ('remove_from_cart', 'Remove from Cart'), ('initiate_checkout', 'Initiate Checkout'), ('purchase', 'Purchase'), ('newsletter_signup', 'Newsletter Signup'), ('contact_form', 'Contact Form'), ('search', 'Search'), ('custom', 'Custom Event')], max_length=50)),
                ('platform', models.CharField(choices=[('facebook', 'Facebook Pixel'), ('google_analytics', 'Google Analytics'), ('google_ads', 'Google Ads'), ('tiktok', 'TikTok Pixel'), ('linkedin', 'LinkedIn Insight'), ('twitter', 'Twitter Pixel'), ('pinterest', 'Pinterest Tag'), ('custom', 'Custom Pixel')], max_length=50)),
                ('session_id', models.CharField(blank=True, max_length=100, null=True)),
                ('page_url', models.URLField(max_length=500)),
                ('page_title', models.CharField(blank=True, max_length=200)),
                ('referrer', models.URLField(blank=True, max_length=500, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('product_id', models.CharField(blank=True, max_length=100)),
                ('product_name', models.CharField(blank=True, max_length=200)),
                ('product_category', models.CharField(blank=True, max_length=100)),
                ('product_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('quantity', models.IntegerField(default=1)),
                ('currency', models.CharField(default='BDT', max_length=3)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('transaction_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('custom_data', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['event_type', 'created_at'], name='analytics_a_event_t_6c35be_idx'), models.Index(fields=['platform', 'created_at'], name='analytics_a_platfor_b08974_idx'), models.Index(fields=['session_id'], name='analytics_a_session_8757e5_idx')],
            },
        ),
    ]
